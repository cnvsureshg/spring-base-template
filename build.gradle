buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('mysql:mysql-connector-java')
    compile('net.kaczmarzyk:specification-arg-resolver:1.1.1')
    compile("commons-io:commons-io:2.4")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    runtime('org.springframework.boot:spring-boot-devtools')
    // It'll removes the getter and setter functions in models/entities
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // JSON lib
    compile('com.googlecode.json-simple:json-simple:1.1.1')
    // Displays the apis endpoint with methods and required fields : spring-boot-starter-actuator
    compile('org.springframework.boot:spring-boot-starter-actuator:2.0.3.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-web:1.5.6.RELEASE')
    compile("org.springframework.boot:spring-boot-configuration-processor")
    //compile ('org.codehaus.groovy:groovy-all')
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.4")
}

// Profile selection while build/bootRun eg: gradle build dev
bootRun {
    if (project.hasProperty('profiles')) {
        environment SPRING_PROFILES_ACTIVE: profiles
    } else {
        def profiles = 'local'
        environment SPRING_PROFILES_ACTIVE: profiles
    }
}